We need cookies (unique ids) for each user
for this we'll use npm uuid
Go to Inspect>Application>Cookies to see the cookies when you're logged in

We implemeted basic authentication and used stateful session management.
The stateful session management has resulted in cookie disappearance upon restarting the server 

The stateless session management will solve this problem as the id assigned to user can be viewed but
can never be changed

(think of the example of the valet boy assigning a ticket to your car)
To implement this, we'll be using Json Web Tokens (JWTs)

Now we have a unique token for each user which will expire after a significantly longer 
date than the session timeout

//to read: Bearer Tokens

What is authorization?
 Authorization is about what users are allowed to do once they’ve been authenticated. It’s not about whether or not someone is who they claim
Authorization refers to granting or denying access based on user identity and permissions/roles.
In our case, it means giving users different levels of access to resources based on their role.
For example: an admin should have full control over all data while a regular user should only be able to view some data.
Hackathon wale project mein when we made the user we had an optional admin checkbox- that's authorization.
The user was henceforth, authorized to be an admin or not to be an admin